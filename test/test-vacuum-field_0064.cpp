#include <biest.hpp>

template <class Real> std::vector<Real> test(int digits, const std::vector<Real>& Bref = std::vector<Real>()) {
  const long NFP = 4, Nt = 1, Np = 64;
  std::vector<Real> X, B0;
  { // Set X, B0
    sctl::Matrix<Real> X_(3,Np), B0_(3,Np); X_ = 0; B0_ = 0;
    X_[0][  0]= 4.58759865016626822e+00; X_[2][  0]= 0.00000000000000000e+00; B0_[0][  0]=-0.00000000000000000e+00; B0_[2][  0]= 1.29556655395419700e-02; B0_[1][  0]= 2.17978963779614204e-01; 
    X_[0][  1]= 4.58485590229096029e+00; X_[2][  1]= 8.61711232012478540e-02; B0_[0][  1]=-8.18662472376686110e-04; B0_[2][  1]= 1.28796610064249462e-02; B0_[1][  1]= 2.18109362935554885e-01; 
    X_[0][  2]= 4.57635706810217169e+00; X_[2][  2]= 1.73234462438383086e-01; B0_[0][  2]=-1.61645250435022998e-03; B0_[2][  2]= 1.26529014361867372e-02; B0_[1][  2]= 2.18514417716688975e-01; 
    X_[0][  3]= 4.56133395178099921e+00; X_[2][  3]= 2.61811481336363006e-01; B0_[0][  3]=-2.37218840676915255e-03; B0_[2][  3]= 1.22795077754277639e-02; B0_[1][  3]= 2.19234112338901249e-01; 
    X_[0][  4]= 4.53864712270149973e+00; X_[2][  4]= 3.52045401734901897e-01; B0_[0][  4]=-3.06497518177225930e-03; B0_[2][  4]= 1.17670720047913686e-02; B0_[1][  4]= 2.20329973440362703e-01; 
    X_[0][  5]= 4.50698489298875682e+00; X_[2][  5]= 4.43494387086346253e-01; B0_[0][  5]=-3.67559808708519103e-03; B0_[2][  5]= 1.11266548142381037e-02; B0_[1][  5]= 2.21877823809802283e-01; 
    X_[0][  6]= 4.46512292379201448e+00; X_[2][  6]= 5.35127650212017580e-01; B0_[0][  6]=-4.18768243604423270e-03; B0_[2][  6]= 1.03720570743893459e-02; B0_[1][  6]= 2.23958000052269124e-01; 
    X_[0][  7]= 4.41222727825472205e+00; X_[2][  7]= 6.25402806246325826e-01; B0_[0][  7]=-4.58787123091423162e-03; B0_[2][  7]= 9.51938292162802374e-03; B0_[1][  7]= 2.26642903217704333e-01; 
    X_[0][  8]= 4.34816581224563148e+00; X_[2][  8]= 7.12399452451477289e-01; B0_[0][  8]=-4.86565031091781234e-03; B0_[2][  8]= 8.58807190956197009e-03; B0_[1][  8]= 2.29982029936329657e-01; 
    X_[0][  9]= 4.27376340540258859e+00; X_[2][  9]= 7.93993648710343058e-01; B0_[0][  9]=-5.01448450221681202e-03; B0_[2][  9]= 7.60314038822933105e-03; B0_[1][  9]= 2.33985811834101748e-01; 
    X_[0][ 10]= 4.19091367564191319e+00; X_[2][ 10]= 8.68064222999425872e-01; B0_[0][ 10]=-5.03516376355512586e-03; B0_[2][ 10]= 6.59639787183131671e-03; B0_[1][ 10]= 2.38611452631944776e-01; 
    X_[0][ 11]= 4.10246956200885737e+00; X_[2][ 11]= 9.32714224862104979e-01; B0_[0][ 11]=-4.93986471331910298e-03; B0_[2][ 11]= 5.60401246282334498e-03; B0_[1][ 11]= 2.43755617167901589e-01; 
    X_[0][ 12]= 4.01189161707299036e+00; X_[2][ 12]= 9.86474436900198315e-01; B0_[0][ 12]=-4.75363921690527460e-03; B0_[2][ 12]= 4.66010589238137225e-03; B0_[1][ 12]= 2.49258976923604797e-01; 
    X_[0][ 13]= 3.92272128936702158e+00; X_[2][ 13]= 1.02844685238574440e+00; B0_[0][ 13]=-4.51113417816688660e-03; B0_[2][ 13]= 3.78933500394928622e-03; B0_[1][ 13]= 2.54925070182939806e-01; 
    X_[0][ 14]= 3.83802476690778249e+00; X_[2][ 14]= 1.05835718980030657e+00; B0_[0][ 14]=-4.24965318991020122e-03; B0_[2][ 14]= 3.00241124073228347e-03; B0_[1][ 14]= 2.60550689673031854e-01; 
    X_[0][ 15]= 3.75997456632168348e+00; X_[2][ 15]= 1.07651345148100752e+00; B0_[0][ 15]=-4.00195953952724431e-03; B0_[2][ 15]= 2.29633168857467382e-03; B0_[1][ 15]= 2.65959245830293567e-01; 
    X_[0][ 16]= 3.68968127722525407e+00; X_[2][ 16]= 1.08369352600451729e+00; B0_[0][ 16]=-3.79169072577119218e-03; B0_[2][ 16]= 1.65815609990666024e-03; B0_[1][ 16]= 2.71026119836569879e-01; 
    X_[0][ 17]= 3.62728130098726709e+00; X_[2][ 17]= 1.08098992241071890e+00; B0_[0][ 17]=-3.63220952006846308e-03; B0_[2][ 17]= 1.06984505619720557e-03; B0_[1][ 17]= 2.75688571417888606e-01; 
    X_[0][ 18]= 3.57218591229588256e+00; X_[2][ 18]= 1.06962239297922590e+00; B0_[0][ 18]=-3.52815171738298655e-03; B0_[2][ 18]= 5.12044360750237753e-04; B0_[1][ 18]= 2.79940637064236442e-01; 
    X_[0][ 19]= 3.52335848717463618e+00; X_[2][ 19]= 1.05071014413147434e+00; B0_[0][ 19]=-3.47845730179048660e-03; B0_[2][ 19]=-3.43436849911686246e-05; B0_[1][ 19]= 2.83820111873400394e-01; 
    X_[0][ 20]= 3.47952756918242967e+00; X_[2][ 20]= 1.02500266126572681e+00; B0_[0][ 20]=-3.47982538889103372e-03; B0_[2][ 20]=-5.89047233837751015e-04; B0_[1][ 20]= 2.87395337475359003e-01; 
    X_[0][ 21]= 3.43932953728502921e+00; X_[2][ 21]= 9.92612192804617655e-01; B0_[0][ 21]=-3.52974718847726436e-03; B0_[2][ 21]=-1.17515192854802312e-03; B0_[1][ 21]= 2.90754343007616989e-01; 
    X_[0][ 22]= 3.40144266421736763e+00; X_[2][ 22]= 9.52848241394954054e-01; B0_[0][ 22]=-3.62828167202903801e-03; B0_[2][ 22]=-1.82228051304522730e-03; B0_[1][ 22]= 2.93992902047075455e-01; 
    X_[0][ 23]= 3.36477503406648770e+00; X_[2][ 23]= 9.04276975961312957e-01; B0_[0][ 23]=-3.77756338629553099e-03; B0_[2][ 23]=-2.56849601493851351e-03; B0_[1][ 23]= 2.97196689191863539e-01; 
    X_[0][ 24]= 3.32870206698553073e+00; X_[2][ 24]= 8.45076144308410493e-01; B0_[0][ 24]=-3.97783434763845402e-03; B0_[2][ 24]=-3.45948990754040920e-03; B0_[1][ 24]= 3.00417393889985174e-01; 
    X_[0][ 25]= 3.29326613723051986e+00; X_[2][ 25]= 7.73631661410916105e-01; B0_[0][ 25]=-4.21880462080014267e-03; B0_[2][ 25]=-4.54411730153350072e-03; B0_[1][ 25]= 3.03649920270626039e-01; 
    X_[0][ 26]= 3.25921809726952727e+00; X_[2][ 26]= 6.89182445785191278e-01; B0_[0][ 26]=-4.46584186635837471e-03; B0_[2][ 26]=-5.86517078176901872e-03; B0_[1][ 26]= 3.06822056749675387e-01; 
    X_[0][ 27]= 3.22783369979831747e+00; X_[2][ 27]= 5.92249763237904236e-01; B0_[0][ 27]=-4.64301656273650477e-03; B0_[2][ 27]=-7.44293662991329409e-03; B0_[1][ 27]= 3.09805303805608778e-01; 
    X_[0][ 28]= 3.20055229252590312e+00; X_[2][ 28]= 4.84646514433646147e-01; B0_[0][ 28]=-4.62119201711454122e-03; B0_[2][ 28]=-9.24767520002320320e-03; B0_[1][ 28]= 3.12446074490097314e-01; 
    X_[0][ 29]= 3.17858919051205557e+00; X_[2][ 29]= 3.69041397063602672e-01; B0_[0][ 29]=-4.22932614746677170e-03; B0_[2][ 29]=-1.11605286934000712e-02; B0_[1][ 29]= 3.14604983552122630e-01; 
    X_[0][ 30]= 3.16269534492426763e+00; X_[2][ 30]= 2.48268042972100145e-01; B0_[0][ 30]=-3.31281922320592016e-03; B0_[2][ 30]=-1.29393877039333544e-02; B0_[1][ 30]= 3.16186003057447651e-01; 
    X_[0][ 31]= 3.15315667083195139e+00; X_[2][ 31]= 1.24702337817044415e-01; B0_[0][ 31]=-1.84098206596766873e-03; B0_[2][ 31]=-1.42364399867922868e-02; B0_[1][ 31]= 3.17142503336554138e-01; 
    X_[0][ 32]= 3.14998674025710779e+00; X_[2][ 32]= 1.55767064775762615e-16; B0_[0][ 32]=-3.94087402200534346e-18; B0_[2][ 32]=-1.47162872240175404e-02; B0_[1][ 32]= 3.17461653796796028e-01; 
    X_[0][ 33]= 3.15315667083195139e+00; X_[2][ 33]=-1.24702337817044165e-01; B0_[0][ 33]= 1.84098206596766353e-03; B0_[2][ 33]=-1.42364399867922868e-02; B0_[1][ 33]= 3.17142503336554138e-01; 
    X_[0][ 34]= 3.16269534492426763e+00; X_[2][ 34]=-2.48268042972099812e-01; B0_[0][ 34]= 3.31281922320591235e-03; B0_[2][ 34]=-1.29393877039333492e-02; B0_[1][ 34]= 3.16186003057447651e-01; 
    X_[0][ 35]= 3.17858919051205557e+00; X_[2][ 35]=-3.69041397063602394e-01; B0_[0][ 35]= 4.22932614746676389e-03; B0_[2][ 35]=-1.11605286934000694e-02; B0_[1][ 35]= 3.14604983552122630e-01; 
    X_[0][ 36]= 3.20055229252590312e+00; X_[2][ 36]=-4.84646514433645759e-01; B0_[0][ 36]= 4.62119201711453688e-03; B0_[2][ 36]=-9.24767520002319973e-03; B0_[1][ 36]= 3.12446074490097314e-01; 
    X_[0][ 37]= 3.22783369979831791e+00; X_[2][ 37]=-5.92249763237904014e-01; B0_[0][ 37]= 4.64301656273650564e-03; B0_[2][ 37]=-7.44293662991326634e-03; B0_[1][ 37]= 3.09805303805608778e-01; 
    X_[0][ 38]= 3.25921809726952727e+00; X_[2][ 38]=-6.89182445785191056e-01; B0_[0][ 38]= 4.46584186635837471e-03; B0_[2][ 38]=-5.86517078176902219e-03; B0_[1][ 38]= 3.06822056749675387e-01; 
    X_[0][ 39]= 3.29326613723051986e+00; X_[2][ 39]=-7.73631661410915883e-01; B0_[0][ 39]= 4.21880462080013660e-03; B0_[2][ 39]=-4.54411730153350246e-03; B0_[1][ 39]= 3.03649920270626039e-01; 
    X_[0][ 40]= 3.32870206698553028e+00; X_[2][ 40]=-8.45076144308410382e-01; B0_[0][ 40]= 3.97783434763845315e-03; B0_[2][ 40]=-3.45948990754041527e-03; B0_[1][ 40]= 3.00417393889985229e-01; 
    X_[0][ 41]= 3.36477503406648726e+00; X_[2][ 41]=-9.04276975961312512e-01; B0_[0][ 41]= 3.77756338629551495e-03; B0_[2][ 41]=-2.56849601493852912e-03; B0_[1][ 41]= 2.97196689191863594e-01; 
    X_[0][ 42]= 3.40144266421736763e+00; X_[2][ 42]=-9.52848241394953832e-01; B0_[0][ 42]= 3.62828167202903888e-03; B0_[2][ 42]=-1.82228051304523858e-03; B0_[1][ 42]= 2.93992902047075455e-01; 
    X_[0][ 43]= 3.43932953728502921e+00; X_[2][ 43]=-9.92612192804617655e-01; B0_[0][ 43]= 3.52974718847726436e-03; B0_[2][ 43]=-1.17515192854802312e-03; B0_[1][ 43]= 2.90754343007616989e-01; 
    X_[0][ 44]= 3.47952756918242923e+00; X_[2][ 44]=-1.02500266126572681e+00; B0_[0][ 44]= 3.47982538889103415e-03; B0_[2][ 44]=-5.89047233837741583e-04; B0_[1][ 44]= 2.87395337475359058e-01; 
    X_[0][ 45]= 3.52335848717463573e+00; X_[2][ 45]=-1.05071014413147412e+00; B0_[0][ 45]= 3.47845730179048183e-03; B0_[2][ 45]=-3.43436849911740456e-05; B0_[1][ 45]= 2.83820111873400449e-01; 
    X_[0][ 46]= 3.57218591229588212e+00; X_[2][ 46]=-1.06962239297922568e+00; B0_[0][ 46]= 3.52815171738299869e-03; B0_[2][ 46]= 5.12044360750227453e-04; B0_[1][ 46]= 2.79940637064236497e-01; 
    X_[0][ 47]= 3.62728130098726709e+00; X_[2][ 47]=-1.08098992241071890e+00; B0_[0][ 47]= 3.63220952006846308e-03; B0_[2][ 47]= 1.06984505619720557e-03; B0_[1][ 47]= 2.75688571417888606e-01; 
    X_[0][ 48]= 3.68968127722525407e+00; X_[2][ 48]=-1.08369352600451729e+00; B0_[0][ 48]= 3.79169072577119218e-03; B0_[2][ 48]= 1.65815609990666133e-03; B0_[1][ 48]= 2.71026119836569879e-01; 
    X_[0][ 49]= 3.75997456632168303e+00; X_[2][ 49]=-1.07651345148100774e+00; B0_[0][ 49]= 4.00195953952722523e-03; B0_[2][ 49]= 2.29633168857465301e-03; B0_[1][ 49]= 2.65959245830293567e-01; 
    X_[0][ 50]= 3.83802476690778249e+00; X_[2][ 50]=-1.05835718980030657e+00; B0_[0][ 50]= 4.24965318991020122e-03; B0_[2][ 50]= 3.00241124073228347e-03; B0_[1][ 50]= 2.60550689673031854e-01; 
    X_[0][ 51]= 3.92272128936702158e+00; X_[2][ 51]=-1.02844685238574440e+00; B0_[0][ 51]= 4.51113417816688660e-03; B0_[2][ 51]= 3.78933500394928536e-03; B0_[1][ 51]= 2.54925070182939806e-01; 
    X_[0][ 52]= 4.01189161707299036e+00; X_[2][ 52]=-9.86474436900198093e-01; B0_[0][ 52]= 4.75363921690527633e-03; B0_[2][ 52]= 4.66010589238136617e-03; B0_[1][ 52]= 2.49258976923604797e-01; 
    X_[0][ 53]= 4.10246956200885737e+00; X_[2][ 53]=-9.32714224862105090e-01; B0_[0][ 53]= 4.93986471331910471e-03; B0_[2][ 53]= 5.60401246282334672e-03; B0_[1][ 53]= 2.43755617167901589e-01; 
    X_[0][ 54]= 4.19091367564191319e+00; X_[2][ 54]=-8.68064222999426094e-01; B0_[0][ 54]= 5.03516376355513020e-03; B0_[2][ 54]= 6.59639787183131324e-03; B0_[1][ 54]= 2.38611452631944776e-01; 
    X_[0][ 55]= 4.27376340540258859e+00; X_[2][ 55]=-7.93993648710342947e-01; B0_[0][ 55]= 5.01448450221680941e-03; B0_[2][ 55]= 7.60314038822933278e-03; B0_[1][ 55]= 2.33985811834101748e-01; 
    X_[0][ 56]= 4.34816581224562970e+00; X_[2][ 56]=-7.12399452451477511e-01; B0_[0][ 56]= 4.86565031091782275e-03; B0_[2][ 56]= 8.58807190956195447e-03; B0_[1][ 56]= 2.29982029936329768e-01; 
    X_[0][ 57]= 4.41222727825472205e+00; X_[2][ 57]=-6.25402806246326270e-01; B0_[0][ 57]= 4.58787123091423162e-03; B0_[2][ 57]= 9.51938292162802201e-03; B0_[1][ 57]= 2.26642903217704333e-01; 
    X_[0][ 58]= 4.46512292379201448e+00; X_[2][ 58]=-5.35127650212017580e-01; B0_[0][ 58]= 4.18768243604423270e-03; B0_[2][ 58]= 1.03720570743893459e-02; B0_[1][ 58]= 2.23958000052269124e-01; 
    X_[0][ 59]= 4.50698489298875682e+00; X_[2][ 59]=-4.43494387086346475e-01; B0_[0][ 59]= 3.67559808708519146e-03; B0_[2][ 59]= 1.11266548142380847e-02; B0_[1][ 59]= 2.21877823809802283e-01; 
    X_[0][ 60]= 4.53864712270149884e+00; X_[2][ 60]=-3.52045401734902452e-01; B0_[0][ 60]= 3.06497518177226581e-03; B0_[2][ 60]= 1.17670720047913530e-02; B0_[1][ 60]= 2.20329973440362731e-01; 
    X_[0][ 61]= 4.56133395178099921e+00; X_[2][ 61]=-2.61811481336363117e-01; B0_[0][ 61]= 2.37218840676915385e-03; B0_[2][ 61]= 1.22795077754277639e-02; B0_[1][ 61]= 2.19234112338901249e-01; 
    X_[0][ 62]= 4.57635706810217169e+00; X_[2][ 62]=-1.73234462438383474e-01; B0_[0][ 62]= 1.61645250435023930e-03; B0_[2][ 62]= 1.26529014361867354e-02; B0_[1][ 62]= 2.18514417716688975e-01; 
    X_[0][ 63]= 4.58485590229096029e+00; X_[2][ 63]=-8.61711232012477707e-02; B0_[0][ 63]= 8.18662472376685459e-04; B0_[2][ 63]= 1.28796610064249445e-02; B0_[1][ 63]= 2.18109362935554885e-01; 
    X.assign(X_.begin(), X_.end());
    B0.assign(B0_.begin(), B0_.end());
  }

  biest::ExtVacuumField<Real> vacuum_field;
  vacuum_field.Setup(digits, NFP, Nt, Np, X, Nt, Np);
  std::cout<<"finished setup of vacuum_field"<<'\n';
  const auto B0dotN = vacuum_field.ComputeBdotN(B0);
  std::cout<<"finished B0.n"<<'\n';

  std::vector<Real> grad_phi, B;
  std::tie(grad_phi, std::ignore) = vacuum_field.ComputeGradPhi(B0dotN);
  std::cout<<"finished computation of gradphi"<<'\n';
  for (long i = 0; i < (long)grad_phi.size(); i++) B.push_back(B0[i] - grad_phi[i]);

  biest::WriteVTK("B", 200, false, Nt, Np, sctl::Vector<Real>(X), Nt, Np, sctl::Vector<Real>(B));
  if (Bref.size()) { // compare with Bref
    Real max_err = 0, max_val = 0;
    for (long i = 0; i < (long)B.size(); i++) {
      max_err = std::max<Real>(max_err, fabs(B[i]-Bref[i]));
      max_val = std::max<Real>(max_val, fabs(Bref[i]));
    }
    std::cout<<"Maximum relative error = "<<max_err/max_val<<'\n';
    biest::WriteVTK("Berr", 200, false, Nt, Np, sctl::Vector<Real>(X), Nt, Np, sctl::Vector<Real>(B)-sctl::Vector<Real>(Bref));
  } else { // print B field
    std::cout<<"\"B_R\",\"B_z\",\"B_phi\"\n";
    for (long i = 0; i < Nt*Np; i++) {
      printf("%.16e,%.16e,%.16e\n", B[0*Nt*Np+i], B[2*Nt*Np+i], B[1*Nt*Np+i]);
    }
    std::cout<<"\n";
  }

  return B;
}

int main() {
  using Real = double;
  std::cout<<"generating reference data with 14 digits"<<'\n';
  const auto Bref = test<Real>(14);
  for (long digits = 3; digits <= 12; digits+=3) {
     std::cout<<"generating reference data with digits="<<digits<<'\n';
     test<Real>(digits, Bref);
  }
  //for (long digits = 3; digits <= 12; digits+=3) {
  //  biest::ExtVacuumFieldTest<Real>::test(digits, 5, 1, 4, biest::SurfType::AxisymNarrow, 2*digits, 7*digits);
  //  //biest::ExtVacuumFieldTest<Real>::test(digits, 5, 20, 20, biest::SurfType::W7X_, 12*digits, 32*digits);
  //}
  return 0;
}
